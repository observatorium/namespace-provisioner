apiVersion: v1
kind: Namespace
metadata:
  name: namespace-provisioner
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: namespace-provisioner
  namespace: namespace-provisioner
  labels:
    app.kubernetes.io/name: namespace-provisioner
spec:
  backend:
    serviceName: namespace-provisioner
    servicePort: http
---
apiVersion: v1
kind: Service
metadata:
  name: namespace-provisioner
  namespace: namespace-provisioner
  labels:
    app.kubernetes.io/name: namespace-provisioner
spec:
  ports:
    - port: 8080
      name: http
    - port: 9090
      name: internal
  selector:
    app.kubernetes.io/name: namespace-provisioner
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: namespace-provisioner
  namespace: namespace-provisioner
  labels:
    app.kubernetes.io/name: namespace-provisioner
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: namespace-provisioner
  template:
    metadata:
      labels:
        app.kubernetes.io/name: namespace-provisioner
    spec:
      serviceAccountName: namespace-provisioner
      containers:
        - name: namespace-provisioner
          image: quay.io/observatorium/namespace-provisioner:metalmatze
          imagePullPolicy: Always
          args:
            - --role=/app/config/role.yaml # change to a mounted role with specific privileges
            - --token=XXX
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 9090
              name: internal
          resources:
            limits:
              cpu: 250m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 32Mi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: namespace-provisioner
  namespace: namespace-provisioner
  labels:
    app.kubernetes.io/name: namespace-provisioner
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: namespace-provisioner
  name: namespace-provisioner
  namespace: namespace-provisioner
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - get
      - create
      - delete
  - apiGroups:
      - "rbac.authorization.k8s.io"
    resources:
      - roles
      - rolebindings
    verbs:
      - get
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get

  # THE FOLLOWING IS THE SAME AS role.yaml
  # This ClusterRole needs to extend the Role in role.yaml
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: namespace-provisioner
  namespace: namespace-provisioner
  labels:
    app.kubernetes.io/name: namespace-provisioner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: namespace-provisioner
subjects:
  - kind: ServiceAccount
    name: namespace-provisioner
    namespace: namespace-provisioner
